{"version":3,"sources":["components/FeedbackOptions/Feedback.styled.jsx","components/FeedbackOptions/Feedback.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/SectionTitle/SectionTitle.styled.jsx","components/SectionTitle/SectionTitle.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Button","styled","button","FeedbackOptions","options","handleIncrement","map","option","type","onClick","toUpperCase","Container","div","Ul","ul","Li","li","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","SectionTitle","title","children","NotificationMessage","p","Notification","message","MainContainer","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","Object","keys","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEaA,EAASC,IAAOC,OAAV,0K,OCEJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,eAACP,EAAD,CAAQQ,KAAK,SAAsBC,QAAS,kBAAMJ,EAAgBE,IAAlE,UACG,IACAA,EAAOG,cAAe,MAFEH,MCJxB,I,EAAMI,EAAYV,IAAOW,IAAV,mDAITC,EAAKZ,IAAOa,GAAV,sHAOFC,EAAKd,IAAOe,GAAV,wFCRA,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,cAACX,EAAD,UACGU,EAAQ,GACP,eAACR,EAAD,WACE,eAACE,EAAD,oBAAWG,EAAX,OACA,eAACH,EAAD,uBAAcI,EAAd,OACA,eAACJ,EAAD,mBAAUK,EAAV,OACA,eAACL,EAAD,qBAAYM,EAAZ,OACA,eAACN,EAAD,iCAAwBO,EAAxB,aCnBH,I,EAAMC,EAAQtB,IAAOuB,GAAV,6GCEH,SAASC,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC5C,OACE,oCACE,cAACJ,EAAD,UAAQG,IACPC,KCNA,I,EAAMC,EAAsB3B,IAAO4B,EAAV,2CCEjB,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,cAACH,EAAD,UAAsBG,ICFxB,IAAMC,EAAgB/B,IAAOW,IAAV,iGC2DXqB,E,4MArDbC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPf,gBAAkB,SAAAE,GAChB,EAAK4B,UAAS,SAAAC,GACZ,OAAO,eACJ7B,EAAS6B,EAAU7B,GAAU,O,EAKpC8B,mBAAqB,WACnB,MAA+B,EAAKH,MACpC,OADA,EAAQhB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBkB,gCAAkC,WAChC,IAAQpB,EAAS,EAAKgB,MAAdhB,KACR,OAAOqB,KAAKC,MAAc,IAAPtB,EAAc,EAAKmB,uB,4CAGxC,WACE,MAA+BI,KAAKP,MAA5BhB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBsB,EAAgBD,KAAKJ,qBAAuB,EAC5CjC,EAAUuC,OAAOC,KAAKH,KAAKP,OAEjC,OACE,eAACF,EAAD,WACE,cAACP,EAAD,CAAcC,MAAM,wBAApB,SACE,cAAC,EAAD,CAAUtB,QAASA,EAASC,gBAAiBoC,KAAKpC,oBAEpD,eAACoB,EAAD,CAAcC,MAAM,aAApB,UACGgB,GACC,cAACzB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLsB,cAAeA,EACfrB,MAAOoB,KAAKJ,qBACZf,mBAAoBmB,KAAKH,qCAI3BI,GAAiB,cAACZ,EAAD,CAAcC,QAAQ,gC,GA/CjCc,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4cf574e5.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  margin-left: 8px;\n  padding: 4px 10px;\n  border-radius: 5px;\n  background-color: yellow;\n  box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.5);\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"./Feedback.styled\";\n\nexport default function FeedbackOptions({ options, handleIncrement }) {\n  return options.map((option) => (\n    <Button type=\"button\" key={option} onClick={() => handleIncrement(option)}>\n      {\" \"}\n      {option.toUpperCase()}{\" \"}\n    </Button>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  handleIncrement: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 10px;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  list-style: none;\n`;\n\nexport const Li = styled.li`\n  padding: 7px 15px;\n  font-size: 24px;\n  color: orange;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './Statistics.styled';\nimport { Ul } from './Statistics.styled';\nimport { Li } from './Statistics.styled';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <Container>\n      {total > 0 && (\n        <Ul>\n          <Li>Good: {good} </Li>\n          <Li>Neutral: {neutral} </Li>\n          <Li>Bad: {bad} </Li>\n          <Li>Total: {total} </Li>\n          <Li>Positive Feedback: {positivePercentage}% </Li>\n        </Ul>\n      )}\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number,\n};\n","import styled from \"@emotion/styled\";\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 24px;\n  font-weight: 500;\n  color: green;\n`;\n","import PropTypes from \"prop-types\";\nimport { Title } from \"./SectionTitle.styled\";\n\nexport default function SectionTitle({ title, children }) {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n}\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import styled from \"@emotion/styled\";\nexport const NotificationMessage = styled.p`\n  color: red;\n`;\n","import PropTypes from \"prop-types\";\nimport { NotificationMessage } from \"./Notification.styled\";\n\nexport default function Notification({ message }) {\n  return <NotificationMessage>{message}</NotificationMessage>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import React from 'react';\nimport Feedback from '../FeedbackOptions/Feedback';\nimport Statistics from '../Statistics/Statistics';\nimport SectionTitle from '../SectionTitle/SectionTitle';\nimport Notification from '../Notification/Notification';\nimport { MainContainer } from './App.styled';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = option => {\n    this.setState(prevState => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback() > 0;\n    const options = Object.keys(this.state);\n\n    return (\n      <MainContainer>\n        <SectionTitle title=\"Please leave feedback\">\n          <Feedback options={options} handleIncrement={this.handleIncrement} />\n        </SectionTitle>\n        <SectionTitle title=\"Statistics\">\n          {totalFeedback && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              totalFeedback={totalFeedback}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n\n          {!totalFeedback && <Notification message=\"No feedback given\" />}\n        </SectionTitle>\n      </MainContainer>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}